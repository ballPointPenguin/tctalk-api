# Run this playbook using the deploy-stage.sh or deploy-prod.sh scripts.
# Ensure that the docker-*.env and init-mongo-*.js files exist for the target environment.

---
- name: strapi deploy
  hosts: west
  vars:
    homedir: "/home/{{ user }}"
    workdir: "{{ homedir }}/code/src/github.com/{{ org }}/{{ repo }}"

  tasks:
    - name: ensure workdir parent dir is present
      file:
        path: "{{ homedir }}/code/src/github.com/{{ org }}"
        state: directory

    - name: clone or update repo
      git:
        dest: "{{ workdir }}"
        repo: "https://github.com/{{ org }}/{{ repo }}.git"
        update: yes
        version: "{{ branch }}"

    - name: copy env file to remote folder
      copy:
        dest: "{{ workdir }}/docker-{{ env }}.env"
        mode: "0600"
        src: "docker-{{ env }}.env"

    # MONGO DATABASE

    - name: copy init-mongo.js file to remote folder
      copy:
        dest: "{{ workdir }}/init-mongo-{{ env }}.js"
        mode: "0600"
        src: "init-mongo-{{ env }}.js"

    - name: ensure mongo data volume
      docker_container:
        image: mongo:4.4
        name: "tctalk-db-data-{{ env }}"
        state: stopped

    - name: run mongo container
      docker_container:
        env_file: "{{ workdir }}/docker-{{ env }}.env"
        image: mongo:4.4
        name: "tctalk-db-{{ env }}"
        restart_policy: always
        volumes:
          - "{{ workdir }}/init-mongo-{{ env }}.js:/docker-entrypoint-initdb.d/init-mongo.js:ro"
        volumes_from:
          - "tctalk-db-data-{{ env }}"

    # STRAPI API

    - name: build strapi docker image
      docker_image:
        #force_source: yes
        name: "tctalk-strapi-api-{{ env }}"
        source: build
        build:
          path: "{{ workdir }}"
          pull: no

    - name: run api container
      docker_container:
        env_file: "{{ workdir }}/docker-{{ env }}.env"
        image: "tctalk-strapi-api-{{ env }}"
        name: "tctalk-strapi-api-{{ env }}"
        restart: yes
        restart_policy: always
        env:
          HSTS: "off"
          LETSENCRYPT_HOST: "{{ api_url }}"
          NODE_ENV: "production"
          VIRTUAL_HOST: "{{ api_url }}"
          VIRTUAL_PORT: "1337"
        links:
          - "tctalk-db-{{ env }}:mongo"
